devtools::document()  # 或快捷键 Ctrl+Shift+D
devtools::document()  # 或快捷键 Ctrl+Shift+D
?sem_effects
?utils
library(lavaan)
model <- '
# Measurement model
ind60 =~ x1 + x2 + x3
dem60 =~ y1 + y2 + y3 + y4
dem65 =~ y5 + y6 + y7 + y8
# Structural model
dem60 ~ ind60
dem65 ~ ind60 + dem60
'
fit <- sem(model, data = PoliticalDemocracy)
# Analyze effects for target variable "dem65"
results <- sem_effects(fit, target = "dem65")
print(results$effect_table)
# Customize plot appearance
results$plot_object +
ggplot2::theme_minimal() +
ggplot2::ggtitle("Standardized Effects for dem65")
devtools::build_vignettes()
remotes::install_local("C:/Users/admin/Documents/semEffect_1.0.1.zip")
remotes::install_local("C:/Users/admin/Documents/semEffect_1.0.1.zip")
remove.packages("semEffect")
remotes::install_local("C:/Users/admin/Documents/semEffect_1.0.1.zip")
remotes::install_local("C:/Users/admin/Documents/semEffect_1.0.1.zip", type = "binary")
library(devtools)   #没有这个R包的话请先自行install
# load_all()    #加载所有.R文件
document()    #依据**.R文件中的注释自动生成对应的**.Rd文件（在man文件夹）
library(devtools)   #没有这个R包的话请先自行install
# load_all()    #加载所有.R文件
document()    #依据**.R文件中的注释自动生成对应的**.Rd文件（在man文件夹）
build()
remotes::install_local("F:/R/semEffect_1.2.1.tar.gz")
remove.packages("semEffect")
remotes::install_local("F:/R/semEffect_1.2.1.tar.gz")
remotes::install_local("F:/R/semEffect_1.2.1.tar.gz")
sem_effects(plsmodel, target = "LOY", plot = TRUE, delete.zero.effect = TRUE,
total_only = TRUE, total_colors = "grey90"")
)
""
sem_effects(plsmodel, target = "LOY", plot = TRUE, delete.zero.effect = TRUE,
total_only = TRUE, total_colors = "grey90")
library(plspm)
data(satisfaction)
# path matrix
IMAG = c(0,0,0,0,0,0)
EXPE = c(1,0,0,0,0,0)
QUAL = c(0,1,0,0,0,0)
VAL = c(0,1,1,0,0,0)
SAT = c(1,1,1,1,0,0)
LOY = c(1,0,0,0,1,0)
sat_path = rbind(IMAG, EXPE, QUAL, VAL, SAT, LOY)
# blocks of outer model
sat_blocks = list(1:5, 6:10, 11:15, 16:19, 20:23, 24:27)
# vector of modes (reflective indicators)
sat_mod = rep("A", 6)
# apply plspm
plsmodel = plspm(satisfaction, sat_path, sat_blocks, modes = sat_mod)
sem_effects(plsmodel, target = "LOY", plot = TRUE, delete.zero.effect = TRUE,
total_only = TRUE, total_colors = "grey90")
sem_effects(plsmodel, target = "LOY", plot = TRUE, delete.zero.effect = TRUE,
total_only = TRUE, total_colors = ggplot2::scale_color_brewer("Set3"))
sem_effects(plsmodel, target = "LOY", plot = TRUE, delete.zero.effect = TRUE,
total_only = TRUE, total_colors = ggplot2::scale_color_brewer("Set3",5))
sem_effects(plsmodel, target = "LOY", plot = TRUE, delete.zero.effect = TRUE,
total_only = TRUE, total_colors = ggplot2::scale_color_brewer(5,"Set3"))
sem_effects(plsmodel, target = "LOY", plot = TRUE, delete.zero.effect = TRUE,
total_only = TRUE, total_colors = RColorBrewer::brewer.pal(5,"Set3"))
?RColorBrewer
library(devtools)   #没有这个R包的话请先自行install
# load_all()    #加载所有.R文件
document()    #依据**.R文件中的注释自动生成对应的**.Rd文件（在man文件夹）
build()
install.packages("lme4")
remotes::install_local("F:/R/semEffect_1.2.1.tar.gz")
library(devtools)   #没有这个R包的话请先自行install
# load_all()    #加载所有.R文件
document()    #依据**.R文件中的注释自动生成对应的**.Rd文件（在man文件夹）
library(devtools)   #没有这个R包的话请先自行install
# load_all()    #加载所有.R文件
document()    #依据**.R文件中的注释自动生成对应的**.Rd文件（在man文件夹）
build()
library(devtools)   #没有这个R包的话请先自行install
# load_all()    #加载所有.R文件
document()    #依据**.R文件中的注释自动生成对应的**.Rd文件（在man文件夹）
build()
pkgload::dev_help('sem_effects')
library(devtools)   #没有这个R包的话请先自行install
# load_all()    #加载所有.R文件
document()    #依据**.R文件中的注释自动生成对应的**.Rd文件（在man文件夹）
build()
pkgload::dev_help('sem_effects')
library(devtools)   #没有这个R包的话请先自行install
# load_all()    #加载所有.R文件
document()    #依据**.R文件中的注释自动生成对应的**.Rd文件（在man文件夹）
build()
pkgload::dev_help('sem_effects')
?plspm
library(plspm)
data(satisfaction)
# path matrix
IMAG = c(0,0,0,0,0,0)
EXPE = c(1,0,0,0,0,0)
QUAL = c(0,1,0,0,0,0)
VAL = c(0,1,1,0,0,0)
SAT = c(1,1,1,1,0,0)
LOY = c(1,0,0,0,1,0)
sat_path = rbind(IMAG, EXPE, QUAL, VAL, SAT, LOY)
# plot diagram of path matrix
innerplot(sat_path)
# blocks of outer model
sat_blocks = list(1:5, 6:10, 11:15, 16:19, 20:23, 24:27)
# vector of modes (reflective indicators)
sat_mod = rep("A", 6)
# apply plspm
satpls = plspm(satisfaction, sat_path, sat_blocks, modes = sat_mod,
scaled = FALSE)
plspm::get_inner_summary(satpls)
plspm::get_inner_summary(sat_path, sat_blocks, modes = sat_mod)
satpls$effects
library(lavaan)
model <- '
ind60 =~ x1 + x2 + x3
dem60 ~ ind60
dem65 ~ ind60 + dem60
'
fit <- sem(model, data = PoliticalDemocracy)
library(lavaan)
model <- '
# Measurement model
ind60 =~ x1 + x2 + x3
dem60 =~ y1 + y2 + y3 + y4
dem65 =~ y5 + y6 + y7 + y8
# Structural model
dem60 ~ ind60
dem65 ~ ind60 + dem60
'
fit <- sem(model, data = PoliticalDemocracy)
sem_effects(fit, target = "dem65")
library(semEffect)
install.packages("lme4")
install.packages("lme4")
library(semEffect)
library(lavaan)
model <- '
# Measurement model
ind60 =~ x1 + x2 + x3
dem60 =~ y1 + y2 + y3 + y4
dem65 =~ y5 + y6 + y7 + y8
# Structural model
dem60 ~ ind60
dem65 ~ ind60 + dem60
'
fit <- sem(model, data = PoliticalDemocracy)
sem_effects(fit, target = "dem65")
library(piecewiseSEM)
pmod <- psem(
lm(rich ~ cover, data = keeley),
lm(cover ~ firesev, data = keeley),
lm(firesev ~ age, data = keeley),
data = keeley
)
sem_effects(pmod, target = "rich",
color_palette = c("darkgreen", "grey80", "purple"))
library(plspm)
data(satisfaction)
# path matrix
IMAG = c(0,0,0,0,0,0)
EXPE = c(1,0,0,0,0,0)
QUAL = c(0,1,0,0,0,0)
VAL = c(0,1,1,0,0,0)
SAT = c(1,1,1,1,0,0)
LOY = c(1,0,0,0,1,0)
sat_path = rbind(IMAG, EXPE, QUAL, VAL, SAT, LOY)
# blocks of outer model
sat_blocks = list(1:5, 6:10, 11:15, 16:19, 20:23, 24:27)
# vector of modes (reflective indicators)
sat_mod = rep("A", 6)
# apply plspm
plsmodel = plspm(satisfaction, sat_path, sat_blocks, modes = sat_mod)
sem_effects(object = plsmodel, target = "LOY",
total_only = TRUE,
total_colors = RColorBrewer::brewer.pal(5,"Set3"))
sem_effects(object = plsmodel, target = "LOY",
total_only = TRUE,
total_colors = RColorBrewer::brewer.pal(5,"Set2"))
citation(lavaan)
citation("lavaan")
citation("piecewiseSEM")
citation("plspm")
semPlot
sem_effects()
devtools::install_github("PhDMeiwp/semEffect", dependencies = TRUE)
detach("package:semEffect", unload = TRUE)
remove.packages("semEffect")
devtools::install_github("PhDMeiwp/semEffect", dependencies = TRUE)
library(semEffect)
library(plspm)
IMAG = c(0,0,0,0,0,0)
EXPE = c(1,0,0,0,0,0)
QUAL = c(0,1,0,0,0,0)
VAL = c(0,1,1,0,0,0)
SAT = c(1,1,1,1,0,0)
LOY = c(1,0,0,0,1,0)
sat_path = rbind(IMAG, EXPE, QUAL, VAL, SAT, LOY)
sat_blocks = list(1:5, 6:10, 11:15, 16:19, 20:23, 24:27)
sat_mod = rep("A", 6)
plsmodel = plspm(satisfaction, sat_path, sat_blocks,
modes = sat_mod)
data(satisfaction)
?satisfaction
library(semEffect)
library(plspm)
IMAG = c(0,0,0,0,0,0)
EXPE = c(1,0,0,0,0,0)
QUAL = c(0,1,0,0,0,0)
VAL = c(0,1,1,0,0,0)
SAT = c(1,1,1,1,0,0)
LOY = c(1,0,0,0,1,0)
sat_path = rbind(IMAG, EXPE, QUAL, VAL, SAT, LOY)
sat_blocks = list(1:5, 6:10, 11:15, 16:19, 20:23, 24:27)
sat_mod = rep("A", 6)
plsmodel = plspm(satisfaction, sat_path, sat_blocks,
modes = sat_mod)
sem_effects(object = plsmodel, target = "LOY",
total_only = TRUE,
total_color = RColorBrewer::brewer.pal(5,"Set2"))
library(lavaan)
modelyy <- '
y7+y8 ~ y1 + y2 + y3 + y4 + y5 + y6
y6 ~ y1 + y2 + y3 + y4 + y5
y5 ~ y1 + y2 + y3 + y4
'
fityy <- sem(modelyy, data = PoliticalDemocracy)
sem_effects(fit, target = "y8", delete_zero_effect = FALSE)
sem_effects(fityy, target = "y8", delete_zero_effect = FALSE)
sem_effects(fityy, target = "y8", delete_zero_effect = T)
library(piecewiseSEM)
pmod <- psem(
lm(rich ~ cover, data = keeley),
lm(cover ~ firesev, data = keeley),
lm(firesev ~ age, data = keeley),
data = keeley
)
results <- sem_effects(pmod, target = "rich")
p <- results$plot_object
p
library(lavaan)
modelg <- '
y7 ~ y1 + y2 + y3 + y4 + y5 + y6
y6 ~ y1 + y2 + y3 + y4 + y5
y5 ~ y1 + y2 + y3 + y4'
fitg <- sem(modelg, data = PoliticalDemocracy)
results <- sem_effects(modelg, target = "y7")
results <- sem_effects(fitg, target = "y7")
p <- results$plot_object
p
modelg <- '
y8 ~ y1 + y2 + y3 + y4 + y5 + y6
y6 ~ y1 + y2 + y3 + y4 + y5
y5 ~ y1 + y2 + y3 + y4'
fitg <- sem(modelg, data = PoliticalDemocracy)
results <- sem_effects(fitg, target = "y8")
p <- results$plot_object
p
library(ggplot2)
p+geom_col(position = position_dodge(1.0), width = 1.0)
p+geom_col(position = position_dodge(1.0), width = 1.0)+geom_text(aes(lebel=Effect_Value),vjust = -1)
p+geom_col(position = position_dodge(1.0), width = 1.0)+geom_text(aes(label=Effect_Value),vjust = -1)
p+geom_col(position = position_dodge(1.0), width = 1.0)+geom_text(aes(label=round(Effect_Value,2),vjust = -1)
)
p+geom_col(position = position_dodge(1.0), width = 1.0)+geom_text(position = position_dodge(1.0), aes(label=round(Effect_Value,2),vjust = -1))
p+geom_col(position = position_dodge(1.0), width = 1.0)+geom_text(position = position_dodge(1.0), aes(label=round(Effect_Value,2),vjust = -0.6))
p+geom_col(position = position_dodge(1.0), width = 1.0)+geom_text(position = position_dodge(1.0), aes(label=round(Effect_Value,2),vjust = 0))
p+geom_col(position = position_dodge(1.0), width = 1.0)+geom_text(position = position_dodge(1.0), aes(label=round(Effect_Value,2),vjust = ifelse(Effect_Value>0,-0.5, 0.5)))+theme_minimal()+theme(legend.position = "top")
p+geom_col(position = position_dodge(1.0), width = 1.0)+geom_text(position = position_dodge(1.0), aes(label=round(Effect_Value,2),vjust = ifelse(Effect_Value>=0,-0.5, 1)))+theme_minimal()+theme(legend.position = "top")
p+geom_col(position = position_dodge(1.0), width = 1.0)+geom_text(position = position_dodge(1.0), aes(label=round(Effect_Value,2),vjust = ifelse(Effect_Value>=0,-0.5, 1)))+theme_test()+theme(legend.position = "top")
p+geom_col(position = "dodge")+geom_text(position = position_dodge(1.0), aes(label=round(Effect_Value,2),vjust = ifelse(Effect_Value>=0,-0.5, 1)))+theme_minimal()+theme(legend.position = "top")
p+geom_col(position = position_dodge(1.0), width = 1.0)+geom_text(position = position_dodge(1.0), aes(label=round(Effect_Value,2),vjust = ifelse(Effect_Value>=0,-0.5, 1)))+theme_test()+theme(legend.position = "top")
p3 <- p + coord_flip()
p3
p3 <- p + coord_flip() + xlab("Standardized effects from SEM")+theme(legend.position = "inside", legend.position.inside = c(0.9,0.1))
p3
p3 <- p + coord_flip() + xlab("Standardized effects from SEM")+theme(legend.position = "inside", legend.position.inside = c(0.9,0.3))
p3
p3 <- p + coord_flip() + xlab("Standardized effects from SEM")+theme(legend.position = "inside", legend.position.inside = c(0.9,0.2))
p3
p4 <- p + coord_polar()
p4
p+geom_col(position = position_dodge(1.0), width = 1.0)+geom_text(position = position_dodge(1.0), aes(label=round(Effect_Value,2),vjust = ifelse(Effect_Value>=0,-0.5, 1)))+theme_test()+theme(legend.position = "top")+ylim(-0.2,0.5)
p+geom_col(position = position_dodge(1.0), width = 1.0)+geom_text(position = position_dodge(1.0), aes(label=round(Effect_Value,2),vjust = ifelse(Effect_Value>=0,-0.5, 1)))+theme_test()+theme(legend.position = "top")+ylim(-0.2,0.6)
p3 <- p + coord_flip() + ylab("Standardized effects from SEM")+theme(legend.position = "inside", legend.position.inside = c(0.9,0.2))
p3
?legend.position.inside
??legend.position.inside
?coord_flip
?ylab
citation(ggplot2)
citation("ggplot2")
install.packages("blavaan")
library(blavaan)
HS.model <- ' visual  =~ x1 + x2 + x3
textual =~ x4 + x5 + x6
speed   =~ x7 + x8 + x9 '
fit <- bsem(HS.model, data = HolzingerSwineford1939,
bcontrol = list(method = "rjparallel"))
data(HolzingerSwineford1939)
data("HolzingerSwineford1939")
data(PoliticalDemocracy, package = "lavaan")
model <- '
# latent variable definitions
ind60 =~ x1 + x2 + x3
dem60 =~ y1 + a*y2 + b*y3 + c*y4
dem65 =~ y5 + a*y6 + b*y7 + c*y8
# regressions
dem60 ~ ind60
dem65 ~ ind60 + dem60
# residual correlations
y1 ~~ y5
y2 ~~ y4 + y6
y3 ~~ y7
y4 ~~ y8
y6 ~~ y8
'
## Not run:
# mildly informative priors for mv intercepts and loadings
fit <- bsem(model, data = PoliticalDemocracy,
dp = dpriors(nu = "normal(5,10)", lambda = "normal(1,.5)"))
summary(fit)
blavInspect(fit)
blavInspect(fit, what = "std")
library(semPlot)
semPaths(fit,"std")
semEffect::sem_effects(fit,"dem65")
0.450*0.881
data(PoliticalDemocracy, package = "lavaan")
model <- '
# latent variable definitions
ind60 =~ x1 + x2 + x3
dem60 =~ y1 + a*y2 + b*y3 + c*y4
dem65 =~ y5 + a*y6 + b*y7 + c*y8
# regressions
dem60 ~ ind60
dem65 ~ ind60 + dem60
# residual correlations
y1 ~~ y5
y2 ~~ y4 + y6
y3 ~~ y7
y4 ~~ y8
y6 ~~ y8
'
## Not run:
# mildly informative priors for mv intercepts and loadings
fit <- bsem(model, data = PoliticalDemocracy,
dp = dpriors(nu = "normal(5,10)", lambda = "normal(1,.5)"))
library(blavaan)
data(PoliticalDemocracy, package = "lavaan")
model <- '
# latent variable definitions
ind60 =~ x1 + x2 + x3
dem60 =~ y1 + a*y2 + b*y3 + c*y4
dem65 =~ y5 + a*y6 + b*y7 + c*y8
# regressions
dem60 ~ ind60
dem65 ~ ind60 + dem60
# residual correlations
y1 ~~ y5
y2 ~~ y4 + y6
y3 ~~ y7
y4 ~~ y8
y6 ~~ y8
'
## Not run:
# mildly informative priors for mv intercepts and loadings
fit <- bsem(model, data = PoliticalDemocracy,
dp = dpriors(nu = "normal(5,10)", lambda = "normal(1,.5)"))
fit@ParTable
lavaan::lavInspect(fit)
lavaan::lavInspect(fit,what = "std")
blavaan::blavInspect(fit,what = "std")
x <- c("论文"，"专利","软著","项目","奖项","书籍","会议","实验","学生")
x <- c("论文","专利","软著","项目","奖项","书籍","会议","实验","学生")
y <- c(11,11,1,3,2,1,3,0,0)
library(ggplot2)
ggplot(aes(x,y))+geom_col()+geom_text(y)+theme_test()
ggplot(aes(x,y))+geom_col()+theme_test()
dat <- data.frame(x,y)
ggplot(dat,aes(x,y))+geom_col()+theme_test()
dat$x <- factor(dat$x, levels = c("论文"，"专利","软著","项目","奖项","书籍","会议","实验","学生"))
dat$x <- factor(dat$x, levels = c("论文","专利","软著","项目","奖项","书籍","会议","实验","学生"))
ggplot(dat,aes(x,y))+geom_col()+theme_test()
ggplot(dat,aes(x,y))+geom_col()+theme_test()+scale_fill_brewer(9,"Set3")
ggplot(dat,aes(x,y, fill = x))+geom_col()+theme_test()+scale_fill_brewer(9,"Set3")
ggplot(dat,aes(x,y, fill = x))+geom_col()+theme_test()+RColorBrewer::brewer.pal(9,"Set3")
ggplot(dat,aes(x,y, fill = x))+geom_col()+theme_test()+RColorBrewer::brewer.pal("Set3",9)
ggplot(dat,aes(x,y, fill = x))+geom_col()+theme_test()+RColorBrewer::brewer.pal("Set3")
ggplot(dat,aes(x,y, fill = x))+geom_col()+theme_test()+RColorBrewer::brewer.pal(9,"Set1")
ggplot(dat,aes(x,y, fill = x))+geom_col()+theme_test()+scale_fill_brewer(9,"Set1")
ggplot(dat,aes(x,y, fill = x))+geom_col()+theme_test()+scale_fill_brewer("Set1")
ggplot(dat,aes(x,y, fill = x))+geom_col()+theme_test()+scale_fill_brewer("Set2")
ggplot(dat,aes(x,y, fill = x))+geom_col()+theme_test()+scale_fill_brewer("Set23")
ggplot(dat,aes(x,y, fill = x))+geom_col()+theme_test()+scale_fill_brewer("Set3")
ggplot(dat,aes(x,y, fill = x))+geom_col()+theme_test()+scale_fill_brewer(9,"Set3")
ggplot(dat,aes(x,y, fill = x))+geom_col()+theme_test()+scale_fill_manual(values = RColorBrewer::brewer.pal(9,"Set3"))
ggplot(dat,aes(x,y, fill = x))+geom_col()+theme_test()+scale_fill_manual(values = RColorBrewer::brewer.pal(9,"Set3"))+geom_text(aes(label = y),vjust=-0.5)
ggplot(dat,aes(x,y, fill = x))+geom_col()+theme_test()+scale_fill_manual(values = RColorBrewer::brewer.pal(9,"Set3"))+geom_text(aes(label = y),vjust=-0.5)+ylim(0,12)+xlab("")+ylab("")+theme(legend.position = "none")
ggplot(dat,aes(x,y, fill = x))+geom_col()+theme_test()+scale_fill_manual(values = RColorBrewer::brewer.pal(9,"Set3"))+geom_text(aes(label = y),vjust=-0.5)+ylim(0,11)+xlab("")+ylab("")+theme(legend.position = "none")
ggplot(dat,aes(x,y, fill = x))+geom_col()+theme_test()+scale_fill_manual(values = RColorBrewer::brewer.pal(9,"Set3"))+geom_text(aes(label = y),vjust=-0.5)+ylim(0,11.5)+xlab("")+ylab("")+theme(legend.position = "none")
